---
import Section from "@/components/Section.astro";
import { basics } from '@cv'; // Corrected import path
import EmailIcon from "@/Assets/Icons/Email.astro"; // Standard Email Icon
// Placeholder for other icons - will use text if specific components aren't confirmed
// import GitHubIcon from "@/Assets/Icons/GitHub.astro";
// import LinkedInIcon from "@/Assets/Icons/LinkedIn.astro";

const { email, profiles } = basics;
const callToAction = "Let's connect!";

// Helper to try and match profile network to a potential icon component name
// For now, this is illustrative; without knowing available icons, it defaults to text.
function getIconForProfile(network) {
  // This is where you'd map network names to actual icon components if they exist
  // e.g., if (network.toLowerCase() === 'github') return GitHubIcon;
  return null; // No icon found, will use text
}
---

<Section title="Get In Touch">
  <div class="contact-container">
    <p class="call-to-action">{callToAction}</p>
    
    <div class="contact-methods">
      {email && (
        <a href={`mailto:${email}`} class="contact-link email-link">
          <EmailIcon class="contact-icon" /> <!-- Assuming EmailIcon is generic enough -->
          <span>{email}</span>
        </a>
      )}
      
      {profiles && profiles.length > 0 && (
        <div class="social-profiles">
          {profiles.map(profile => {
            const IconComponent = getIconForProfile(profile.network);
            return (
              <a href={profile.url} target="_blank" rel="noopener noreferrer" class="contact-link social-link">
                { IconComponent && <IconComponent class="contact-icon" /> }
                <span>{profile.network} ({profile.username})</span>
              </a>
            );
          })}
        </div>
      )}
    </div>
  </div>
</Section>

<style>
  .contact-container {
    text-align: center;
    padding: 2rem 1rem;
  }

  .call-to-action {
    font-size: 1.5rem;
    font-weight: 500;
    color: #2d3748;
    margin-bottom: 2rem;
  }

  .contact-methods {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem; /* Space between contact methods */
  }

  .contact-link {
    display: inline-flex; /* Align icon and text */
    align-items: center;
    gap: 0.75rem; /* Space between icon and text */
    font-size: 1.1rem;
    color: #3182ce; /* Blue link color */
    text-decoration: none;
    padding: 0.5rem 1rem;
    border-radius: 0.375rem;
    transition: background-color 0.2s ease, color 0.2s ease;
  }

  .contact-link:hover {
    background-color: #ebf8ff; /* Light blue background on hover */
    color: #2c5282; /* Darker blue on hover */
  }
  
  .contact-icon {
    width: 24px; /* Or your desired icon size */
    height: 24px;
    fill: currentColor; /* Makes SVG icons inherit text color */
  }

  .social-profiles {
    display: flex;
    flex-wrap: wrap; /* Allow profile links to wrap on smaller screens */
    justify-content: center;
    gap: 1rem; /* Space between profile links */
  }

  .social-link {
    /* Specific styling for social links if different from general contact-link */
    border: 1px solid #bee3f8; /* Light blue border */
  }
  
  .social-link:hover {
    border-color: #3182ce;
  }

  /* Ensure icons from Assets/Icons/ are styled if they are SVGs */
  :global(.contact-icon path) {
     /* Example: fill: currentColor; if not set in SVG itself */
  }
</style>
